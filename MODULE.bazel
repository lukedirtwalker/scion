module(
    name = "scionproto_scion",
    version = "0.11.0",
)

bazel_dep(name = "rules_go", version = "0.49.0", repo_name = "io_bazel_rules_go")
bazel_dep(name = "gazelle", version = "0.38.0", repo_name = "bazel_gazelle")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "buildifier_prebuilt", version = "7.1.2")
bazel_dep(name = "aspect_bazel_lib", version = "2.8.1")
bazel_dep(name = "aspect_rules_js", version = "2.0.1")
bazel_dep(name = "apple_rules_lint", version = "0.3.2")
bazel_dep(name = "rules_proto_grpc", version = "5.0.0")
bazel_dep(name = "rules_proto", version = "6.0.2")
bazel_dep(name = "toolchains_protoc", version = "0.3.1")
bazel_dep(name = "protobuf", version = "27.1", repo_name = "com_google_protobuf")
bazel_dep(name = "rules_python", version = "0.35.0")

go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(
    version = "1.23.0",
)
use_repo(go_sdk, "go_toolchains")

register_toolchains("@go_toolchains//:all")

go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(go_deps, "com_github_antlr_antlr4_runtime_go_antlr", "com_github_buildkite_go_buildkite_v2", "com_github_dchest_cmac", "com_github_deepmap_oapi_codegen_v2", "com_github_fatih_color", "com_github_getkin_kin_openapi", "com_github_go_chi_chi_v5", "com_github_go_chi_cors", "com_github_golang_mock", "com_github_golang_protobuf", "com_github_google_go_cmp", "com_github_google_gopacket", "com_github_grpc_ecosystem_go_grpc_middleware", "com_github_grpc_ecosystem_go_grpc_prometheus", "com_github_grpc_ecosystem_grpc_opentracing", "com_github_hashicorp_golang_lru_arc_v2", "com_github_iancoleman_strcase", "com_github_lestrrat_go_jwx", "com_github_mattn_go_isatty", "com_github_mattn_go_sqlite3", "com_github_mdlayher_arp", "com_github_mdlayher_ethernet", "com_github_oapi_codegen_runtime", "com_github_olekukonko_tablewriter", "com_github_opentracing_opentracing_go", "com_github_patrickmn_go_cache", "com_github_pelletier_go_toml_v2", "com_github_pkg_errors", "com_github_prometheus_client_golang", "com_github_prometheus_procfs", "com_github_quic_go_quic_go", "com_github_sergi_go_diff", "com_github_songgao_water", "com_github_spf13_cobra", "com_github_spf13_pflag", "com_github_spf13_viper", "com_github_stretchr_testify", "com_github_uber_jaeger_client_go", "com_github_vishvananda_netlink", "in_gopkg_yaml_v2", "org_go4_netipx", "org_golang_google_grpc", "org_golang_google_grpc_examples", "org_golang_google_protobuf", "org_golang_x_crypto", "org_golang_x_net", "org_golang_x_sync", "org_golang_x_sys", "org_golang_x_tools", "org_modernc_sqlite", "org_uber_go_goleak", "org_uber_go_zap")

npm = use_extension(
    "@aspect_rules_js//npm:extensions.bzl",
    "npm",
    dev_dependency = True,
)
npm.npm_translate_lock(
    name = "npm",
    data = [
        "//private/mgmtapi/tools:package.json",
    ],
    pnpm_lock = "//private/mgmtapi/tools:pnpm-lock.yaml",
    update_pnpm_lock = True,
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(
    npm,
    "npm",
)

protoc = use_extension("@toolchains_protoc//protoc:extensions.bzl", "protoc")
protoc.toolchain(
    # Creates a repository to satisfy well-known-types dependencies such as
    # deps=["@com_google_protobuf//:any_proto"]
    google_protobuf = "com_google_protobuf",
    version = "LATEST",
)
